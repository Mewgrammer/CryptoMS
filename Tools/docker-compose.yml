version: '3.8'
services:
  csr-storage:
    build:
      context: ../
      dockerfile: 'CsrStorage/Dockerfile'
    environment:
      ASPNETCORE_ENVIRONMENT: Docker

  csr-processor:
    depends_on: 
      - csr-storage
    build:
      context: ../
      dockerfile: 'CsrProcessor/Dockerfile'
    environment:
      ASPNETCORE_ENVIRONMENT: Docker

  cert-storage:
    build:
      context: ../
      dockerfile: 'CertificateStorage/Dockerfile'
    environment:
      ASPNETCORE_ENVIRONMENT: Docker

  ca:
    build:
      context: ../
      dockerfile: 'CertificateAuthority/Dockerfile'
    environment:
      ASPNETCORE_ENVIRONMENT: Docker

  ra:
    build:
      context: ../
      dockerfile: 'RegistrationAuthority/Dockerfile'
    environment:
      ASPNETCORE_ENVIRONMENT: Docker

  zookeeper:
    container_name: zookeeper
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
  kafka:
    container_name: kafka
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
            
  ca-db:
    container_name: pg_ca
    image: postgres
    restart: always
    environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: root
      POSTGRES_DB: ca
    ports:
      - "5431:5432"
    
  cert-db:
    container_name: pg_cert
    image: postgres
    restart: always
    environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: root
      POSTGRES_DB: certificate
    ports:
      - "5432:5432"
  
  csr-db:
    container_name: pg_csr
    image: postgres
    restart: always
    environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: root
      POSTGRES_DB: csr
    ports:
      - "5433:5432"
      
  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: root
    ports:
      - "8080:80"
  
  kafka-ui:
    container_name: kafka_ui
    image: provectuslabs/kafka-ui:latest
    ports:
      - "9080:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092      