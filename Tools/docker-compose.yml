version: '3.8'
services:
  user-mgmt:
    build:
      context: ../
      dockerfile: 'UserManagement/Dockerfile'
    environment:
      ASPNETCORE_ENVIRONMENT: Docker
  
  csr-storage:
    build:
      context: ../
      dockerfile: 'CsrStorage/Dockerfile'
    environment:
      ASPNETCORE_ENVIRONMENT: Docker

  csr-processor:
    depends_on: 
      - csr-storage
    build:
      context: ../
      dockerfile: 'CsrProcessor/Dockerfile'
    environment:
      ASPNETCORE_ENVIRONMENT: Docker

  cert-storage:
    build:
      context: ../
      dockerfile: 'CertificateStorage/Dockerfile'
    environment:
      ASPNETCORE_ENVIRONMENT: Docker

  ca:
    build:
      context: ../
      dockerfile: 'CertificateAuthority/Dockerfile'
    environment:
      ASPNETCORE_ENVIRONMENT: Docker

  ra:
    build:
      context: ../
      dockerfile: 'RegistrationAuthority/Dockerfile'
    environment:
      ASPNETCORE_ENVIRONMENT: Docker

  rabbitmq:
    image: rabbitmq:management-alpine
    container_name: 'rabbitmq'
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - ~/.docker-conf/rabbitmq/data/:/var/lib/rabbitmq/
      - ~/.docker-conf/rabbitmq/log/:/var/log/rabbitmq
            
  user-db:
    container_name: pg_user
    profiles: [ "db" ]
    image: postgres
    restart: always
    environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: root
      POSTGRES_DB: user
    ports:
      - "5430:5432"
        
  ca-db:
    container_name: pg_ca
    profiles: [ "db" ]
    image: postgres
    restart: always
    environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: root
      POSTGRES_DB: ca
    ports:
      - "5431:5432"
    
  cert-db:
    container_name: pg_cert
    profiles: [ "db" ]
    image: postgres
    restart: always
    environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: root
      POSTGRES_DB: certificate
    ports:
      - "5432:5432"
  
  csr-db:
    container_name: pg_csr
    profiles: [ "db" ]
    image: postgres
    restart: always
    environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: root
      POSTGRES_DB: csr
    ports:
      - "5433:5432"
      
  pgadmin:
    container_name: pgadmin
    profiles: [ "db" ]
    image: dpage/pgadmin4
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: root
    ports:
      - "8080:80"
